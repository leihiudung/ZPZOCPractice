
struct __Block_byref_a_0 {
    void *__isa;
    __Block_byref_a_0 *__forwarding;
    int __flags;
    int __size;
    NSInteger a;
};

struct __ViewController__defineBlockWithBlock_block_impl_0 {
    struct __block_impl impl;
    struct __ViewController__defineBlockWithBlock_block_desc_0* Desc;
    __Block_byref_a_0 *a; // by ref
    __ViewController__defineBlockWithBlock_block_impl_0(void *fp, struct __ViewController__defineBlockWithBlock_block_desc_0 *desc, __Block_byref_a_0 *_a, int flags=0) : a(_a->__forwarding) {
        impl.isa = &_NSConcreteStackBlock;
        impl.Flags = flags;
        impl.FuncPtr = fp;
        Desc = desc;
    }
};
static void __ViewController__defineBlockWithBlock_block_func_0(struct __ViewController__defineBlockWithBlock_block_impl_0 *__cself) {
__Block_byref_a_0 *a = __cself->a; // bound by ref

    NSLog((NSString *)&__NSConstantStringImpl__var_folders_hk_zhxz0gtj7z1djqcl5mbjdpd00000gn_T_ViewController_b226c1_mi_10,((NSNumber *(*)(Class, SEL, NSInteger))(void *)objc_msgSend)(objc_getClass("NSNumber"), sel_registerName("numberWithInteger:"), (NSInteger)((a->__forwarding->a))));
}
static void __ViewController__defineBlockWithBlock_block_copy_0(struct __ViewController__defineBlockWithBlock_block_impl_0*dst, struct __ViewController__defineBlockWithBlock_block_impl_0*src) {_Block_object_assign((void*)&dst->a, (void*)src->a, 8/*BLOCK_FIELD_IS_BYREF*/);}

static void __ViewController__defineBlockWithBlock_block_dispose_0(struct __ViewController__defineBlockWithBlock_block_impl_0*src) {_Block_object_dispose((void*)src->a, 8/*BLOCK_FIELD_IS_BYREF*/);}

static struct __ViewController__defineBlockWithBlock_block_desc_0 {
    size_t reserved;
    size_t Block_size;
void (*copy)(struct __ViewController__defineBlockWithBlock_block_impl_0*, struct __ViewController__defineBlockWithBlock_block_impl_0*);
void (*dispose)(struct __ViewController__defineBlockWithBlock_block_impl_0*);
} __ViewController__defineBlockWithBlock_block_desc_0_DATA = { 0, sizeof(struct __ViewController__defineBlockWithBlock_block_impl_0), __ViewController__defineBlockWithBlock_block_copy_0, __ViewController__defineBlockWithBlock_block_dispose_0};

static void _I_ViewController_defineBlockWithBlock(ViewController * self, SEL _cmd) {
    __attribute__((__blocks__(byref))) __Block_byref_a_0 a = {(void*)0,(__Block_byref_a_0 *)&a, 0, sizeof(__Block_byref_a_0), 20};
    void(*testBlock)(void) = ((void (*)())&__ViewController__defineBlockWithBlock_block_impl_0((void *)__ViewController__defineBlockWithBlock_block_func_0, &__ViewController__defineBlockWithBlock_block_desc_0_DATA, (__Block_byref_a_0 *)&a, 570425344));
    ((void (*)(__block_impl *))((__block_impl *)testBlock)->FuncPtr)((__block_impl *)testBlock);
}

说明：
1、之前的__ViewController__defineBlockWithBlock_block_copy_0和__ViewController__defineBlockWithBlock_block_dispose_0只会在捕获对象的时候才出现，但是现在__block修饰的时候也会出现
2、生成了新的结构体__Block_byref_a_0
    这里的__forwarding储存的是__Block_byref_a_0结构体的变量的地址，
    有个问题就是，为什么这里要这么写：a->__forwarding->a（答案：用来保证操作的始终是堆中的拷贝a，而不是栈中的a）
3、传递的是变量的地址

