
struct __ViewController__defineNormalLocalWithGlobalParamsBlock_block_impl_0 {
    struct __block_impl impl;
    struct __ViewController__defineNormalLocalWithGlobalParamsBlock_block_desc_0* Desc;
    ViewController *const __strong self;
    __ViewController__defineNormalLocalWithGlobalParamsBlock_block_impl_0(void *fp, struct __ViewController__defineNormalLocalWithGlobalParamsBlock_block_desc_0 *desc, ViewController *const __strong _self, int flags=0) : self(_self) {
        impl.isa = &_NSConcreteStackBlock;
        impl.Flags = flags;
        impl.FuncPtr = fp;
        Desc = desc;
    }
};
static void __ViewController__defineNormalLocalWithGlobalParamsBlock_block_func_0(struct __ViewController__defineNormalLocalWithGlobalParamsBlock_block_impl_0 *__cself) {
    ViewController *const __strong self = __cself->self; // bound by copy

    NSLog((NSString *)&__NSConstantStringImpl__var_folders_hk_zhxz0gtj7z1djqcl5mbjdpd00000gn_T_ViewController_21b555_mi_3,(*(NSInteger *)((char *)self + OBJC_IVAR_$_ViewController$_count)));
}
static void __ViewController__defineNormalLocalWithGlobalParamsBlock_block_copy_0(struct __ViewController__defineNormalLocalWithGlobalParamsBlock_block_impl_0*dst, struct __ViewController__defineNormalLocalWithGlobalParamsBlock_block_impl_0*src) {_Block_object_assign((void*)&dst->self, (void*)src->self, 3/*BLOCK_FIELD_IS_OBJECT*/);}

static void __ViewController__defineNormalLocalWithGlobalParamsBlock_block_dispose_0(struct __ViewController__defineNormalLocalWithGlobalParamsBlock_block_impl_0*src) {_Block_object_dispose((void*)src->self, 3/*BLOCK_FIELD_IS_OBJECT*/);}

static struct __ViewController__defineNormalLocalWithGlobalParamsBlock_block_desc_0 {
    size_t reserved;
    size_t Block_size;
    void (*copy)(struct __ViewController__defineNormalLocalWithGlobalParamsBlock_block_impl_0*, struct __ViewController__defineNormalLocalWithGlobalParamsBlock_block_impl_0*);
    void (*dispose)(struct __ViewController__defineNormalLocalWithGlobalParamsBlock_block_impl_0*);
} __ViewController__defineNormalLocalWithGlobalParamsBlock_block_desc_0_DATA = { 0, sizeof(struct __ViewController__defineNormalLocalWithGlobalParamsBlock_block_impl_0), __ViewController__defineNormalLocalWithGlobalParamsBlock_block_copy_0, __ViewController__defineNormalLocalWithGlobalParamsBlock_block_dispose_0};

static void _I_ViewController_defineNormalLocalWithGlobalParamsBlock(ViewController * self, SEL _cmd) {
    void(*testBlock)(void) = ((void (*)())&__ViewController__defineNormalLocalWithGlobalParamsBlock_block_impl_0((void *)__ViewController__defineNormalLocalWithGlobalParamsBlock_block_func_0, &__ViewController__defineNormalLocalWithGlobalParamsBlock_block_desc_0_DATA, self, 570425344));
    ((void (*)(__block_impl *))((__block_impl *)testBlock)->FuncPtr)((__block_impl *)testBlock);
}

说明：通过clang可以发现，当引用了self的属性的时候，传递的其实是self，所以这也就解释了为什么会有循环引用的问题会出现了;
另外，因为这里引用了对象，所以出现了两个新的方法__ViewController__defineNormalLocalWithGlobalParamsBlock_block_copy_0和__ViewController__defineNormalLocalWithGlobalParamsBlock_block_dispose_0





